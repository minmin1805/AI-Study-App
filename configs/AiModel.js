const {
    GoogleGenerativeAI,
    HarmCategory,
    HarmBlockThreshold,
  } = require("@google/generative-ai");
  
  const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
  const genAI = new GoogleGenerativeAI(apiKey);
  
  const model = genAI.getGenerativeModel({
    model: "gemini-2.0-flash-exp",
  });
  
  const generationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "application/json",
  };
  
    export const courseOutlineAIModel = model.startChat({
      generationConfig,
      history: [
        {
          role: "user",
          parts: [
            {text: "Generate a study material for Python for Exam and level of difficulty  will be Easy with summary of course, List of Chapters along with a summary for each chapter, Topic list in each chapter. All result in  JSON format\n\n"},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "```json\n{\n  \"course_title\": \"Python Fundamentals for Exams (Easy Level)\",\n  \"course_summary\": \"This course provides a beginner-friendly introduction to Python programming, covering fundamental concepts essential for understanding and applying Python in basic problem-solving. It focuses on building a strong foundation in syntax, data types, control flow, and basic data structures, preparing students for introductory-level Python exams.\",\n  \"difficulty_level\": \"Easy\",\n  \"chapters\": [\n    {\n      \"chapter_number\": 1,\n      \"chapter_title\": \"Introduction to Python\",\n      \"chapter_summary\": \"This chapter introduces the core concepts of Python, including its history, features, advantages, and setting up the Python environment. It also covers the basic syntax and structure of a Python program and how to execute Python scripts.\",\n      \"topics\": [\n        \"What is Python?\",\n        \"History and Features of Python\",\n        \"Advantages and Disadvantages of Python\",\n        \"Setting up Python Environment (Installation)\",\n        \"Python Interpreter and Execution\",\n        \"Basic Python Syntax\",\n        \"Comments in Python\",\n        \"First Python Program (Hello, World!)\"\n      ]\n    },\n    {\n      \"chapter_number\": 2,\n      \"chapter_title\": \"Data Types and Variables\",\n      \"chapter_summary\": \"This chapter explains fundamental data types in Python, such as integers, floats, strings, and booleans. It also covers variables, variable assignment, and how to perform basic arithmetic operations.\",\n      \"topics\": [\n        \"Data Types: Integers, Floats, Strings, Booleans\",\n        \"Variables: Declaration and Assignment\",\n        \"Naming Conventions for Variables\",\n        \"Basic Arithmetic Operators (+, -, *, /, %)\",\n        \"Type Conversion (Casting)\",\n        \"String Manipulation (Concatenation, Indexing, Slicing)\",\n        \"Formatted Output using f-strings\"\n      ]\n    },\n    {\n      \"chapter_number\": 3,\n      \"chapter_title\": \"Input and Output\",\n      \"chapter_summary\": \"This chapter focuses on how to receive input from the user and display output in Python. It covers the `input()` function for reading user input and the `print()` function for displaying output.\",\n      \"topics\": [\n        \"The `input()` Function\",\n        \"Prompting the User for Input\",\n        \"The `print()` Function\",\n        \"Formatting Output with `print()`\",\n        \"Using Separators and Endings in `print()`\",\n        \"Reading Input as Strings and Converting to Other Data Types\"\n      ]\n    },\n    {\n      \"chapter_number\": 4,\n      \"chapter_title\": \"Control Flow: Conditional Statements\",\n      \"chapter_summary\": \"This chapter introduces conditional statements, which allow you to control the flow of execution based on conditions. It covers `if`, `elif`, and `else` statements for making decisions in your code.\",\n      \"topics\": [\n        \"Boolean Expressions and Logical Operators (and, or, not)\",\n        \"The `if` Statement\",\n        \"The `else` Statement\",\n        \"The `elif` Statement\",\n        \"Nested `if` Statements\",\n        \"Conditional Operators (>, <, >=, <=, ==, !=)\"\n      ]\n    },\n    {\n      \"chapter_number\": 5,\n      \"chapter_title\": \"Control Flow: Loops\",\n      \"chapter_summary\": \"This chapter explains how to use loops to repeat a block of code multiple times. It covers `for` and `while` loops and how to control loop execution using `break` and `continue` statements.\",\n      \"topics\": [\n        \"The `for` Loop\",\n        \"Iterating over Sequences (Strings, Lists)\",\n        \"The `range()` Function\",\n        \"The `while` Loop\",\n        \"Loop Control: `break` Statement\",\n        \"Loop Control: `continue` Statement\",\n        \"Nested Loops\"\n      ]\n    },\n    {\n      \"chapter_number\": 6,\n      \"chapter_title\": \"Lists\",\n      \"chapter_summary\": \"This chapter introduces lists, a fundamental data structure in Python. It covers creating lists, accessing elements, modifying lists, and common list operations.\",\n      \"topics\": [\n        \"Creating Lists\",\n        \"Accessing List Elements (Indexing)\",\n        \"Slicing Lists\",\n        \"List Methods (append, insert, remove, pop, index, count, sort)\",\n        \"List Comprehension (Introduction)\",\n        \"Iterating over Lists\",\n        \"List Length (`len()` function)\"\n      ]\n    }\n  ]\n}\n```\n"},
          ],
        },
      ],
    });
  

    export const generateNotesAiModel = model.startChat({
      generationConfig,
      history: [
        {
          role: "user",
          parts: [
            {text: "```\nGenerate exam material detail content for each chapter , Make sure to includes all topic point in the content, make sure to give content in HTML format (Do not Add HTMLKK , Head, Body, title tag), The chapters:     {\n      \"chapter_number\": 1,\n      \"chapter_title\": \"Introduction to Bootstrap\",\n      \"chapter_summary\": \"This chapter provides an introduction to Bootstrap, including its history, features, advantages, and how to set up a basic Bootstrap project. It covers how to include Bootstrap in a project and its core concepts.\",\n      \"topics\": [\n        \"What is Bootstrap?\",\n        \"History and evolution of Bootstrap\",\n        \"Advantages and Disadvantages of Bootstrap\",\n        \"Setting up a Bootstrap project (CDN, local files)\",\n        \"Bootstrap's grid system overview\",\n        \"Understanding responsive design concepts\"\n      ]\n    },\n```\n"},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "```html\n    <div>\n        <h2>Chapter 1: Introduction to Bootstrap</h2>\n        <p><strong>Summary:</strong> This chapter provides an introduction to Bootstrap, including its history, features, advantages, and how to set up a basic Bootstrap project. It covers how to include Bootstrap in a project and its core concepts.</p>\n\n        <h3>Topics Covered:</h3>\n        <ul>\n            <li>\n                <h4>What is Bootstrap?</h4>\n                <p>\n                  <ul>\n                    <li>Definition of Bootstrap as a free, open-source front-end framework.</li>\n                    <li>Its purpose in simplifying web development.</li>\n                    <li>Core components: CSS framework, JavaScript plugins.</li>\n                  </ul>\n                </p>\n                 \n                 <p><strong>Potential Exam Questions:</strong></p>\n                 <ul>\n                    <li>What is Bootstrap primarily used for?</li>\n                    <li>Describe the core components of Bootstrap.</li>\n                    <li>What type of framework is Bootstrap?</li>\n                 </ul>\n            </li>\n            <li>\n                <h4>History and Evolution of Bootstrap</h4>\n                <p>\n                    <ul>\n                        <li>Origin at Twitter as \"Twitter Blueprint.\"</li>\n                        <li>Major milestones and version releases (e.g., Bootstrap 2, 3, 4, and 5).</li>\n                        <li>Key changes and improvements in each version.</li>\n                    </ul>\n                  \n                 </p>\n                <p><strong>Potential Exam Questions:</strong></p>\n                <ul>\n                  <li>Where did Bootstrap originate and what was its initial name?</li>\n                  <li>Mention at least two key version releases of Bootstrap and changes they introduced.</li>\n                  <li>What major versions of Bootstrap have been released to date?</li>\n                </ul>\n            </li>\n            <li>\n                <h4>Advantages and Disadvantages of Bootstrap</h4>\n                 <p><strong>Advantages:</strong>\n                 <ul>\n                    <li>Faster development time using pre-built components.</li>\n                     <li>Cross-browser compatibility.</li>\n                     <li>Responsive design capabilities.</li>\n                     <li>Large community support and extensive documentation.</li>\n                 </ul>\n                 </p>\n                  <p><strong>Disadvantages:</strong>\n                  <ul>\n                    <li>Potential for large file sizes (when not properly optimized).</li>\n                    <li>Can lead to cookie-cutter websites if overused or not customized.</li>\n                    <li>Can be less flexible than hand-coding.</li>\n                  </ul>\n                  </p>\n                   <p><strong>Potential Exam Questions:</strong></p>\n                   <ul>\n                    <li>Discuss at least two advantages of using Bootstrap.</li>\n                    <li>Discuss at least two disadvantages of using Bootstrap.</li>\n                     <li>How does the use of Bootstrap affect the speed of web development?</li>\n                   </ul>\n            </li>\n            <li>\n                <h4>Setting up a Bootstrap project (CDN, local files)</h4>\n                <p><strong>CDN (Content Delivery Network):</strong>\n                    <ul>\n                        <li>How to include Bootstrap CSS and JavaScript files via CDN links.</li>\n                        <li>Benefits of using a CDN.</li>\n                        <li>Example of CDN links for Bootstrap CSS and JavaScript.</li>\n                    </ul>\n                </p>\n                <p><strong>Local files:</strong>\n                  <ul>\n                    <li>Downloading Bootstrap files (CSS and JavaScript).</li>\n                    <li>Linking the files to the project.</li>\n                    <li>Steps to setup a local project.</li>\n                  </ul>\n                </p>\n\n                <p><strong>Potential Exam Questions:</strong></p>\n                <ul>\n                    <li>What does CDN stand for and how does it aid in Bootstrap project setup?</li>\n                    <li>Explain the steps involved in including Bootstrap files in your project using local files.</li>\n                    <li>Which is better and why, CDN or Local Files?</li>\n                </ul>\n            </li>\n            <li>\n                <h4>Bootstrap's grid system overview</h4>\n                 <p>\n                   <ul>\n                    <li>Explanation of rows and columns.</li>\n                    <li>How the 12-column grid system works.</li>\n                    <li>Usage of grid classes (e.g., <code>.container</code>, <code>.row</code>, <code>.col-*</code>).</li>\n                    <li>How to make columns to be full width.</li>\n                   </ul>\n                 </p>\n                  <p><strong>Potential Exam Questions:</strong></p>\n                  <ul>\n                    <li>What are the primary components of Bootstrap's grid system?</li>\n                    <li>Describe the purpose of using the <code>.container</code>, <code>.row</code>, and <code>.col-*</code> classes.</li>\n                    <li>How many columns does Bootstrap's grid system have?</li>\n                  </ul>\n            </li>\n             <li>\n                <h4>Understanding responsive design concepts</h4>\n                <p>\n                    <ul>\n                      <li>Definition of responsive design.</li>\n                      <li>How Bootstrap supports responsive design.</li>\n                      <li>Use of media queries for different screen sizes.</li>\n                      <li>Bootstrap's breakpoint system (e.g., <code>sm</code>, <code>md</code>, <code>lg</code>, <code>xl</code>, <code>xxl</code>).</li>\n                    </ul>\n                 </p>\n                 <p><strong>Potential Exam Questions:</strong></p>\n                 <ul>\n                  <li>Explain the meaning of responsive design.</li>\n                  <li>How does Bootstrap make a website responsive?</li>\n                  <li>List and explain Bootstrap's breakpoints.</li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n```\n"},
          ],
        },
      ],
    });

    // const result = await chatSession.sendMessage("INSERT_INPUT_HERE");
    // console.log(result.response.text());